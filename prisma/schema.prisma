generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(uuid())
  email            String         @unique
  name             String?
  password         String
  createdIsusus    Isusu[]        @relation("CreatedIsusus") // Groups the user created
  isusuMemberships IsusuMembers[] // Groups the user joined
  wallet           Wallet?
  transactions     Transaction[]  // ✅ Fixed reference to Transaction
}

model Wallet {
  id        String   @id @default(uuid())
  userId    String   @unique
  balance   Float    @default(0.0)
  createdAt DateTime @default(now()) // ✅ Added createdAt

  user      User     @relation(fields: [userId], references: [id])
}

model Transaction {
  id         String   @id @default(uuid())
  userId     String
  amount     Float
  type       String   // "deposit" or "withdrawal"
  status     String   // "pending", "completed", "failed"
  reference  String   @unique
  createdAt  DateTime @default(now()) // ✅ Added createdAt

  user       User     @relation(fields: [userId], references: [id])
}

model Isusu {
  id          String         @id @default(uuid())
  isusuName   String
  frequency   String
  milestone   Float
  isusuClass  String
  createdAt   DateTime       @default(now())
  invite_code String         @unique @default(uuid())
  createdById String         // Now required
  createdBy   User           @relation("CreatedIsusus", fields: [createdById], references: [id])
  members     IsusuMembers[]
}

model IsusuMembers {
  id        String   @id @default(uuid())
  isusuId   String
  userId    String
  joinedAt  DateTime @default(now())
  isusu     Isusu    @relation(fields: [isusuId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}
