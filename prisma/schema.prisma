generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String         @id @default(uuid())
  email                String         @unique
  name                 String?
  password             String
  createdIsusus        Isusu[]        @relation("CreatedIsusus")
  isusuMemberships     IsusuMembers[]
  receivedTransactions Transaction[]  @relation("ReceivedTransactions")
  sentTransactions     Transaction[]  @relation("SentTransactions")
  walletId             String?        @unique  // ✅ Keep walletId for direct access
  wallet               Wallet?        @relation("UserWallet", fields: [walletId], references: [id]) // ✅ Fields only here
}

model Wallet {
  id        String   @id @default(uuid())
  balance   Float    @default(0.00)
  createdAt DateTime @default(now())
  user      User?    @relation("UserWallet")  // ✅ No fields/references here
  isusu     Isusu?   @relation("IsusuWallet") // ✅ No fields/references here
}

model Transaction {
  id          String   @id @default(uuid())
  amount      Float
  type        String
  status      String
  createdAt   DateTime @default(now())
  recipientId String
  senderId    String
  reference   String   @unique
  recipient   User     @relation("ReceivedTransactions", fields: [recipientId], references: [id])
  sender      User     @relation("SentTransactions", fields: [senderId], references: [id])
}

model Isusu {
  id          String         @id @default(uuid())
  isusuName   String
  frequency   String
  milestone   Float
  isusuClass  String
  createdAt   DateTime       @default(now())
  invite_code String         @unique @default(uuid())
  createdById String
  createdBy   User           @relation("CreatedIsusus", fields: [createdById], references: [id])
  members     IsusuMembers[]
  walletId    String?        @unique  // ✅ Keep walletId for direct access
  wallet      Wallet?        @relation("IsusuWallet", fields: [walletId], references: [id]) // ✅ Fields only here
}

model IsusuMembers {
  id       String   @id @default(uuid())
  isusuId  String
  joinedAt DateTime @default(now())
  userId   String
  isusu    Isusu    @relation(fields: [isusuId], references: [id])
  user     User     @relation(fields: [userId], references: [id])
}
